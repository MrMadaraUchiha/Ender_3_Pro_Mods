[gcode_macro LAZY_HOME]
description: Home only if needed
gcode:
  {% if printer.toolhead.homed_axes != "xyz" %}
    G28
  {% endif %}

[gcode_macro START_PRINT]
gcode:
    LAZY_HOME       #Home all axes    
    G92 E0          #Reset Extruder
    prime_line
    #SET_SKEW XY=140.6,141,99.6 XZ=141.2,140.6,99.6 YZ=141.35,140.6,99.66
    
[gcode_macro END_PRINT]
gcode:
    #M300                   #BEEP 
    M107                    #turn off cooling fan
    G91  					#relative positioning
	G10               		#retract
	G0 Z1 X-2 Y-2 F6000     #short quick move to disengage from print
	G0 Z5.00  F6000  		#move Z-Axis away from part
	G90                     #Absolute Positioning
    G1 X30 Y225 F2000       # Move to X30, Y225
    G91                     #relative positioning
    G0 E2 F400			    #extrude filament to get better blob on end
	G10               		#retract additional filament to move out of melt zone
	TURN_OFF_HEATERS
    #M84                     #Disable steppers
    #SET_SKEW CLEAR=1
    SAVE_IF_SET

[gcode_macro SAVE_IF_SET]
gcode:
  {% if printer["gcode_macro SAVE_AT_END"].save == 1 %}
    SAVE_CONFIG
  {% endif %}

[gcode_macro SAVE_AT_END]
description: SAVE_CONFIG at end of print
variable_save: 0
gcode:
  SET_GCODE_VARIABLE MACRO=SAVE_AT_END VARIABLE=save VALUE=1

[gcode_macro prime_line]
gcode:
	SAVE_GCODE_STATE
    G90                     #Absolute coordinates
    M83                     #Relative extrusion
    G1 X20 Y3 F12000
	G1 Z0.5
	G1 X65 E18 F1000
	G1 X75 E2.5 F1000
	RESTORE_GCODE_STATE
    G92 E0                  #Reset E position
	
[gcode_macro PID_NOZZLE]
gcode:
    {% set TEMP = params.TEMP|default(220) %}
    PID_CALIBRATE HEATER=extruder TARGET={TEMP}

[gcode_macro PID_BED]
gcode:
    {% set TEMP = params.TEMP|default(60) %}
    PID_CALIBRATE HEATER=heater_bed TARGET={TEMP}

[gcode_shell_command graph_x]
command: ~/klipper/scripts/calibrate_shaper.py /tmp/resonances_x_x.csv -o /tmp/shaper_calibrate_x.png
timeout: 20
verbose: True

[gcode_shell_command graph_y]
command: ~/klipper/scripts/calibrate_shaper.py /tmp/resonances_y_y.csv -o /tmp/shaper_calibrate_y.png
timeout: 20
verbose: True

[gcode_macro MEASURE_X_RESONANCE]
gcode:
    LAZY_HOME
    G1 Z20 F400
    TEST_RESONANCES AXIS=X NAME=x FREQ_END=135
    RUN_SHELL_COMMAND CMD=graph_x

[gcode_macro MEASURE_Y_RESONANCE]
gcode:
    LAZY_HOME
    G1 Z40
    TEST_RESONANCES AXIS=Y NAME=y FREQ_END=135
    RUN_SHELL_COMMAND CMD=graph_y

[gcode_macro SHAPER_X]
gcode:
    LAZY_HOME
    SHAPER_CALIBRATE AXIS=X

[gcode_macro SHAPER_Y]
gcode:
    LAZY_HOME
    SHAPER_CALIBRATE AXIS=Y

[gcode_macro RESET_PA]
gcode:
    SET_PRESSURE_ADVANCE ADVANCE={printer.configfile.config["extruder"]["pressure_advance"]} SMOOTH_TIME={printer.configfile.config["extruder"]["pressure_advance_smooth_time"]}

[gcode_macro SET_PA]
gcode:
     {% set PA = params.PA|default(0.03) %}
     {% set ST = params.ST|default(0.02) %}
     SET_PRESSURE_ADVANCE ADVANCE={PA} SMOOTH_TIME={ST}

[gcode_macro LOAD]
description: Load filament
gcode:
    {% set EXTRUDER = params.EXTRUDER|default(220) %}
    M109 S{EXTRUDER}		#set hotend temperature and wait
    M83						#relative positioning on extruder	
    G0 E90 F400  			#prime extruder
    #M109 S0					#turn off extruder

[gcode_macro UNLOAD]
description: Unload filament
gcode:
    {% set EXTRUDER = params.EXTRUDER|default(220) %}
    M109 S{EXTRUDER}		#set hotend temperature and wait	
    M83						#relative positioning on extruder
    G0 E5 F400			    #extrude filament to get better blob on end
    G0 E-120 F1800  		#retract additional filament to move out of melt zone

[gcode_macro COLD_PULL]
gcode:
    {% set EXTRUDER = params.EXTRUDER|default(235) %}
    {% set PULLTEMP = params.PULLTEMP|default(80) %}
    G90
    M83
    G92 E0
    M109 S{EXTRUDER} 
    M104 S{PULLTEMP}
    M106 S120   #fan on
    G1 E5 F5
    M109 S{PULLTEMP}
    G1 E-15 F45
    G1 E-80 F300
    G92 E0
    M106 S0
    M104 S0
    M84

[gcode_macro M600] 
description: FILAMENT SWAP
gcode:
    {% set X = params.X|default(5) %}
    {% set Y = params.Y|default(5) %}
    {% set Z = params.Z|default(10) %}

	{% if printer.toolhead.status == "Ready" %}
		# do nothing
	{% else %}
    	M117 Filament Change
		SAVE_GCODE_STATE NAME=M600_state
    	PAUSE
		G91
		G1 E-5 F4000
		G1 Z{Z}
		G90
		G1 X{X} Y{Y} F3000
		G0 E15 F1800			#extrude filament to get better blob on end
		G0 E-85 F4800  		#retract additional filament to move out of melt zone
		RESTORE_GCODE_STATE NAME=M600_state
	{% endif %}

[gcode_macro SWAP_RESUME] 
description: Load filament and resume printing
gcode:
 	G0 E80 F4800
    #G0 E10 F400
	RESUME

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT
    END_PRINT

[gcode_macro HOT_CANCEL]
description: Cancel print but stay heated
gcode:
    M107                            #fans off
    PAUSE
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    SET_SKEW CLEAR=1
           
[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
# change this if you need more or less extrusion
variable_extrude: 10
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude       |float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_minimum.x       |float + 20 %}
  {% set y_park = printer.toolhead.axis_maximum.y       |float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z        |float %}
  {% set act_z = printer.toolhead.position.z            |float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  SAVE_GCODE_STATE NAME=PAUSE_state
  BASE_PAUSE
  G91
  G1 E-{E} F2100
  G1 Z{z_safe} F900
  G90
  G1 X{x_park} Y{y_park} F6000

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  G91
  G1 E{E} F2100
  RESTORE_GCODE_STATE NAME=PAUSE_state
  BASE_RESUME

[gcode_macro M300]
description: beep
gcode:
    SET_PIN PIN=_beeper VALUE=1
    G4 P500
    SET_PIN PIN=_beeper VALUE=0

[gcode_macro M204]
description: ACCEL = ACCEL_TO_DECEL
rename_existing: M204.1
gcode:

   {% if 'P' in params %}{% set accel = params.P %}{% endif %}
   {% if 'S' in params %}{% set accel = params.S %}{% endif %}
   {% if 'T' in params %}{% set accel = params.T %}{% endif %}

    SET_VELOCITY_LIMIT ACCEL={ accel } ACCEL_TO_DECEL={ accel|float * 0.7}